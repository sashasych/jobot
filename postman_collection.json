{
	"info": {
		"_postman_id": "jobot-api-collection-v2",
		"name": "Jobot API v2.0",
		"description": "Полная коллекция API запросов для тестирования Telegram бота Jobot",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "jobot"
	},
	"item": [
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/health",
					"host": ["{{base_url}}"],
					"path": ["health"]
				},
				"description": "Проверка состояния API сервиса"
			},
			"response": []
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Create User",
					"request": {
						"method": "POST",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tg_user_name\": \"john_doe\",\n  \"tg_chat_id\": \"123456789\",\n  \"is_active\": true,\n  \"is_premium\": false,\n  \"role\": \"employee\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/user",
							"host": ["{{base_url}}"],
							"path": ["api", "user"]
						},
						"description": "Создание нового пользователя Telegram"
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/user/{{user_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "user", "{{user_id}}"]
						},
						"description": "Получение пользователя по ID"
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tg_user_name\": \"john_updated\",\n  \"is_active\": true,\n  \"is_premium\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/user/{{user_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "user", "{{user_id}}"]
						},
						"description": "Обновление данных пользователя"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/user/{{user_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "user", "{{user_id}}"]
						},
						"description": "Удаление пользователя"
					},
					"response": []
				}
			],
			"description": "CRUD операции для пользователей Telegram бота"
		},
		{
			"name": "Employees",
			"item": [
				{
					"name": "Create Employee",
					"request": {
						"method": "POST",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_id\": \"{{user_id}}\",\n  \"tags\": [\"golang\", \"postgresql\", \"docker\", \"backend\", \"microservices\"]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/employee",
							"host": ["{{base_url}}"],
							"path": ["api", "employee"]
						},
						"description": "Создание профиля сотрудника (соискателя)"
					},
					"response": []
				},
				{
					"name": "Get Employee by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/employee/{{employee_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "employee", "{{employee_id}}"]
						},
						"description": "Получение сотрудника по ID"
					},
					"response": []
				},
				{
					"name": "Update Employee",
					"request": {
						"method": "PUT",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tags\": [\"golang\", \"kubernetes\", \"ci/cd\", \"devops\"]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/employee/{{employee_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "employee", "{{employee_id}}"]
						},
						"description": "Обновление тегов/навыков сотрудника"
					},
					"response": []
				},
				{
					"name": "Delete Employee",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/employee/{{employee_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "employee", "{{employee_id}}"]
						},
						"description": "Удаление профиля сотрудника"
					},
					"response": []
				}
			],
			"description": "CRUD операции для сотрудников (соискателей)"
		},
		{
			"name": "Employers",
			"item": [
				{
					"name": "Create Employer",
					"request": {
						"method": "POST",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_id\": \"{{employer_user_id}}\",\n  \"company_name\": \"TechCorp Inc\",\n  \"company_description\": \"Leading technology company specializing in AI and ML\",\n  \"company_website\": \"https://techcorp.example.com\",\n  \"company_location\": \"Москва, Россия\",\n  \"company_size\": \"51-200\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/employer",
							"host": ["{{base_url}}"],
							"path": ["api", "employer"]
						},
						"description": "Создание профиля работодателя (компании)"
					},
					"response": []
				},
				{
					"name": "Get Employer by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/employer/{{employer_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "employer", "{{employer_id}}"]
						},
						"description": "Получение работодателя по ID"
					},
					"response": []
				},
				{
					"name": "Update Employer",
					"request": {
						"method": "PUT",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"company_name\": \"TechCorp International\",\n  \"company_description\": \"Global leader in AI technology\",\n  \"company_size\": \"201-500\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/employer/{{employer_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "employer", "{{employer_id}}"]
						},
						"description": "Обновление данных работодателя"
					},
					"response": []
				},
				{
					"name": "Delete Employer",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/employer/{{employer_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "employer", "{{employer_id}}"]
						},
						"description": "Удаление профиля работодателя"
					},
					"response": []
				}
			],
			"description": "CRUD операции для работодателей (компаний)"
		},
		{
			"name": "Resumes",
			"item": [
				{
					"name": "Create Resume",
					"request": {
						"method": "POST",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"employee_id\": \"{{employee_id}}\",\n  \"tg_file_id\": \"BAADAgADZAAD1234567890\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/resume",
							"host": ["{{base_url}}"],
							"path": ["api", "resume"]
						},
						"description": "Загрузка резюме (Telegram file ID)"
					},
					"response": []
				},
				{
					"name": "Get Resume by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/resume/{{resume_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "resume", "{{resume_id}}"]
						},
						"description": "Получение резюме по ID"
					},
					"response": []
				},
				{
					"name": "Update Resume",
					"request": {
						"method": "PUT",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tg_file_id\": \"BAADAgADaAAD0987654321\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/resume/{{resume_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "resume", "{{resume_id}}"]
						},
						"description": "Обновление резюме (замена файла)"
					},
					"response": []
				},
				{
					"name": "Delete Resume",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/resume/{{resume_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "resume", "{{resume_id}}"]
						},
						"description": "Удаление резюме"
					},
					"response": []
				}
			],
			"description": "CRUD операции для резюме сотрудников"
		},
		{
			"name": "Vacancies",
			"item": [
				{
					"name": "Create Vacancy",
					"request": {
						"method": "POST",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"employer_id\": \"{{employer_id}}\",\n  \"tags\": [\"golang\", \"kubernetes\", \"microservices\", \"senior\"],\n  \"title\": \"Senior Backend Developer (Go)\",\n  \"description\": \"We are looking for an experienced Backend Developer to join our team. Must have 5+ years of experience with Go, Kubernetes, and microservices architecture. Responsibilities include designing and implementing scalable backend services.\",\n  \"location\": \"Москва (можно удалённо)\",\n  \"salary\": \"250,000 - 350,000 руб/месяц\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/vacancy",
							"host": ["{{base_url}}"],
							"path": ["api", "vacancy"]
						},
						"description": "Создание новой вакансии"
					},
					"response": []
				},
				{
					"name": "Get Vacancy by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/vacancy/{{vacancy_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "vacancy", "{{vacancy_id}}"]
						},
						"description": "Получение вакансии по ID"
					},
					"response": []
				},
				{
					"name": "Get All Vacancies",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/vacancy",
							"host": ["{{base_url}}"],
							"path": ["api", "vacancy"]
						},
						"description": "Получение списка всех вакансий"
					},
					"response": []
				},
				{
					"name": "Get Employer Vacancies",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/vacancy/employer/{{employer_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "vacancy", "employer", "{{employer_id}}"]
						},
						"description": "Получение всех вакансий конкретного работодателя"
					},
					"response": []
				},
				{
					"name": "Update Vacancy",
					"request": {
						"method": "PUT",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Senior Backend Developer (Go) - Updated\",\n  \"salary\": \"300,000 - 400,000 руб/месяц\",\n  \"tags\": [\"golang\", \"kubernetes\", \"aws\", \"terraform\"]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/vacancy/{{vacancy_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "vacancy", "{{vacancy_id}}"]
						},
						"description": "Обновление данных вакансии"
					},
					"response": []
				},
				{
					"name": "Delete Vacancy",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/vacancy/{{vacancy_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "vacancy", "{{vacancy_id}}"]
						},
						"description": "Удаление вакансии"
					},
					"response": []
				}
			],
			"description": "CRUD операции для вакансий и поиск вакансий"
		},
		{
			"name": "Reactions",
			"item": [
				{
					"name": "Create Reaction",
					"request": {
						"method": "POST",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"employee_id\": \"{{employee_id}}\",\n  \"vacansie_id\": \"{{vacancy_id}}\",\n  \"reaction\": \"like\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/reaction",
							"host": ["{{base_url}}"],
							"path": ["api", "reaction"]
						},
						"description": "Создание реакции (лайк) на вакансию"
					},
					"response": []
				},
				{
					"name": "Get Reaction by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/reaction/{{reaction_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "reaction", "{{reaction_id}}"]
						},
						"description": "Получение реакции по ID"
					},
					"response": []
				},
				{
					"name": "Get Employee Reactions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/reaction/employee/{{employee_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "reaction", "employee", "{{employee_id}}"]
						},
						"description": "Получение всех реакций сотрудника"
					},
					"response": []
				},
				{
					"name": "Delete Reaction",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/reaction/{{reaction_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "reaction", "{{reaction_id}}"]
						},
						"description": "Удаление реакции (отмена лайка)"
					},
					"response": []
				}
			],
			"description": "Операции с реакциями (лайками) на вакансии"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [""]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Автоматическое сохранение ID из ответов",
					"if (pm.response.code === 201 || pm.response.code === 200) {",
					"    try {",
					"        const jsonData = pm.response.json();",
					"        if (jsonData.data) {",
					"            // Сохранить user_id",
					"            if (jsonData.data.id) {",
					"                pm.collectionVariables.set('user_id', jsonData.data.id);",
					"            }",
					"            // Сохранить employee_id",
					"            if (jsonData.data.employee_id) {",
					"                pm.collectionVariables.set('employee_id', jsonData.data.employee_id);",
					"            }",
					"            // Сохранить employer_id",
					"            if (jsonData.data.employer_id) {",
					"                pm.collectionVariables.set('employer_id', jsonData.data.employer_id);",
					"            }",
					"            // Сохранить resume_id",
					"            if (jsonData.data.resume_id) {",
					"                pm.collectionVariables.set('resume_id', jsonData.data.resume_id);",
					"            }",
					"            // Сохранить vacancy_id",
					"            if (jsonData.data.vacansie_id) {",
					"                pm.collectionVariables.set('vacancy_id', jsonData.data.vacansie_id);",
					"            }",
					"            // Сохранить reaction_id",
					"            if (jsonData.data.reaction_id) {",
					"                pm.collectionVariables.set('reaction_id', jsonData.data.reaction_id);",
					"            }",
					"        }",
					"    } catch(e) {",
					"        console.log('Could not parse response');",
					"    }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "550e8400-e29b-41d4-a716-446655440001",
			"type": "string"
		},
		{
			"key": "employer_user_id",
			"value": "550e8400-e29b-41d4-a716-446655440002",
			"type": "string"
		},
		{
			"key": "employee_id",
			"value": "660e8400-e29b-41d4-a716-446655440001",
			"type": "string"
		},
		{
			"key": "employer_id",
			"value": "770e8400-e29b-41d4-a716-446655440001",
			"type": "string"
		},
		{
			"key": "resume_id",
			"value": "880e8400-e29b-41d4-a716-446655440001",
			"type": "string"
		},
		{
			"key": "vacancy_id",
			"value": "990e8400-e29b-41d4-a716-446655440001",
			"type": "string"
		},
		{
			"key": "reaction_id",
			"value": "aa0e8400-e29b-41d4-a716-446655440001",
			"type": "string"
		}
	]
}
